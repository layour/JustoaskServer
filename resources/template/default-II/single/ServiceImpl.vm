package ${PACKAGE_NAME};

import com.chinasofti.ro.bizframework.core.orm.Page;
import com.chinasofti.ro.bizframework.core.orm.entity.Model;
import com.chinasofti.ro.bizframework.core.orm.IDAO;
#foreach( $type in $CLASS_IMPORT_TYPES)
import $type;
#end

/**
 * <p>Service Impl</p>
 * 
 * @author BizFoundation
 * @version 1.0
 * @since 1.0
 */
public class ${CLASS_FIRST_UPPER_NAME} #if($CLASS_IMPLEMENTS_INTERFACES!="")implements ${CLASS_IMPLEMENTS_INTERFACES}#end {

	private IDAO dao;
	
	public void setDao(IDAO dao) {
		this.dao = dao;
	}

	/**
	 * 根据id查询数据
	 * 
	 * @param id
	 * @return model
	 */
	public Model findById(${PO_PK_SIMPLE_TYPE} id) {
		${PO_FIRST_UPPER_NAME} ${PO_FIRST_LOWER_NAME} = new ${PO_FIRST_UPPER_NAME}();
		${PO_FIRST_LOWER_NAME}.set$VmVarInfo.getJavaBeanFieldName(${PO_PK_FIRST_LOWER_NAME})(id);
		return (Model) dao.createQuery(${PO_FIRST_LOWER_NAME}).first();
	}
	
	/**
	 * 分页查询
	 * 
	 * @param ${PO_FIRST_LOWER_NAME}
	 * @param page 分页
	 * @return
	 */
	public Page findByPage(${PO_FIRST_UPPER_NAME} ${PO_FIRST_LOWER_NAME}, Page page) {
		String sql = ${PO_FIRST_LOWER_NAME}.getSql("list", dao.dbMeta());//使用${PO_FIRST_LOWER_NAME}.hbm.xml中的id为list的sql查询
		return dao.createNamedQuery(${PO_FIRST_LOWER_NAME}.getClass(),sql, ${PO_FIRST_LOWER_NAME}).fetch(page);
	}
	
	/**
	 * 批量删除数据
	 * 
	 * @param ids
	 * @return int[] delete records
	 */
	public int[] batchDelete(String ids) {
		${PO_FIRST_UPPER_NAME} ${PO_FIRST_LOWER_NAME} = new ${PO_FIRST_UPPER_NAME}();
		return dao.batchDelete(${PO_FIRST_LOWER_NAME}, ids);
	}

	/**
	 * 保存数据
	 * @param Model
	 */
	public void save(Model model) {
		dao.save(model);
	}

	/**
	 * 更新数据
	 * @param Model
	 */
	public void update(Model model) {
		dao.update(model);
	}
}