package ${javaInfo.getPackageName()};

#foreach( $type in ${javaInfo.getImportTypes()})
import $type;
#end
import java.io.Serializable;

import org.apache.commons.lang3.builder.ToStringBuilder;

import core.domain.DomainBase;
import core.mybatis.MyBatisDomain;

@MyBatisDomain
public class ${javaInfo.getClassFirstUpperName()} extends DomainBase implements Serializable{

	private static final long serialVersionUID = 1L;

## Fields    
#set($count=0)#foreach( $fieldName in $javaInfo.getFields_commn() )
	private $javaInfo.getField_types().get($count) $fieldName;
#set($count=$count+1)#end

## QueryOnlyFields
#set($count1=0)#foreach( $fieldName in $javaInfo.getQueryExtFieldNames() )
	private $javaInfo.getQueryExtFieldTypes().get($count1) $fieldName; 
#set($count1=$count1+1)#end

## default constructor
	public ${javaInfo.getClassFirstUpperName()}() {
		super();
	}

## Property accessors
#set($index=0)#foreach( $fieldName in $javaInfo.getFields_commn() )
##if($PO_FIELD_NOTBLANKS.get($index))
##	@NotBlank
###end
#if($PO_FIELD_ROBASE_SIMPLE_TYPES.get($index) == "Date")
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+08:00")
#end
	public $javaInfo.getField_types().get($index) ${javaInfo.getFieldGetMethod($fieldName)}() {
		return this.$fieldName;
	}

	public void ${javaInfo.getFieldSetMethod($fieldName)}($javaInfo.getField_types().get($index) $javaInfo.getFields_commn().get($index)) {
		this.$fieldName = $fieldName;
	}
#set($index=$index+1)#end

	## QueryOnlyProperty accessors
#set($index1=0)#foreach( $fieldName in $javaInfo.getQueryExtFieldNames() )
	public $javaInfo.getQueryExtFieldTypes().get($index1) ${javaInfo.getFieldGetMethod($fieldName)}() {
		return this.$fieldName;
	}

	public void ${javaInfo.getFieldSetMethod($fieldName)}($javaInfo.getQueryExtFieldTypes().get($index1) $javaInfo.getQueryExtFieldNames().get($index1)) {
		this.$fieldName = $fieldName;
	}
#set($index1=$index1+1)#end

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}
}